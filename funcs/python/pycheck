# run checks on python code (should be run from top level dir of a project in an activated venv)

local GRN='\e[32m'
local NC='\e[0m' # No Color

pycheck() {

    # ensure a venv exists; this also is a weak test
    # for whether we are running at the top level cur_dir
    # at least given my usual conventions
    if [[ ! -d venv/ ]]; then
        echo "no venv found...exiting"
        return 1
    fi

    local cur_dir=$(pwd)
    
    # check if inside active venv
    which python | grep venv | grep $cur_dir > /dev/null \
      || { echo "venv is not active or is not in expected top-level directory"; return 1; }


    run_isort \
      && run_green \
      && run_mypy \
      && run_flake8
}

check_installed() {
    which $1 > /dev/null || { echo "$1 not installed"; return 1 }
}

run_isort() {
    check_installed isort || return 1
    echo -n "---> isort"
    local isort_output=$(
        isort \
        -rc \
        -y \
        --trailing-comma \
        --order-by-type \
        --multi-line=3 \
        --skip=venv \
        --virtual-env=venv \
        $cur_dir
    )
    local output=$(echo $isort_output | sed 's/.*Skipped.*files//' | sed '/^$/d')
    if [ -z $output ]; then
        echo -e "${GRN}\xE2\x9C\x94${NC}"
        return 0
    fi
    echo ""    
    echo $output
}

run_green() {
    check_installed green
    echo -n "---> green"
    green_output="$(green)" || { echo ""; echo $green_output; unset green_output; return 1; }
    echo -e "${GRN}\xE2\x9C\x94${NC}"
    unset green_output
}

run_flake8() {
    check_installed flake8
    echo -n "---> flake8"
    local output=$(
        flake8 \
          --max-line-len=100 \
          --exclude=venv \
          $cur_dir
    )
    if [ -z $output ]; then
        echo -e "${GRN}\xE2\x9C\x94${NC}"
        return 0
    fi
    echo ""
    echo $output
    return 1
}

run_mypy() {
    check_installed mypy
    echo -n "---> mypy"
    output=$(
        mypy \
          --ignore-missing-imports \
          --no-error-summary \
          $cur_dir
    )
    if [ -z $output ]; then
        echo -e "${GRN}\xE2\x9C\x94${NC}"
        return 0
    fi
    echo ""
    echo $output
    return 1
}

