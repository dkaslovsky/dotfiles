# compatible with gopass 1.9.2

# get path to secret via grep
gpget() {

        # grep for path to secret
        local secret_path=$(gpfind "$@")

        # check that exactly one result was returned
        if [ -z "$secret_path" ]; then
                echo "No secrets matched"
                return 1
        fi
        if [ $(echo "$secret_path" | wc -l) -gt 1 ]; then
                echo "More than one secret matched:"
                echo "$secret_path"
                return 1
        fi
	
	echo "$secret_path"
}


# list the top level gopass directories
gptoplevel() {
	 gopass ls -f | sed 's/\/.*//' | sort | uniq
}


# find path to entry
gpfind() {
    local all_paths=$(gopass ls -f)
    for i in "$@"
    do
        if [[ "$i" == /* ]]; then
            all_paths=$(echo "$all_paths" | grep -i -v "${i:1}")
        else
            all_paths=$(echo "$all_paths" | grep -i "$i")
        fi
    done
    echo "$all_paths"
}

# show all but the password of a secret
# assumes safecontent: true, autoclip: false
gpshow() {

	# do not use local here
    secret_path=$(gpget "$@") || { echo "$secret_path"; unset secret_path; return 1; }

    echo ""
    gopass show -n "$secret_path"
    echo ""

	unset secret_path
}


# grep for secret, open in Chrome, copy password to clipboard
# assumes safecontent: true, autoclip: false
gpopen() {

	# do not use local here
	secret_path=$(gpget "$@") || { echo "$secret_path"; unset secret_path; return 1; }

	echo "Opening $secret_path"

	# open url - relies on convention that url is on the second line and has the prefix "url: "
	local url=$(gopass show --noparsing $secret_path | head -n 2 | tail -n 1 | sed "s/url: //")
	open -na "$GOPASS_BROWSER" --args --new-window --profile-directory="Default" $url
	# copy password
	gopass -c $secret_path
	unset secret_path
}

# grep for secret and copy password to clipboard
gpcp() {

	# do not use local here        
        secret_path=$(gpget "$@") || { echo "$secret_path"; unset secret_path; return 1; }
        gopass -c $secret_path
	unset secret_path
}

# generate using symbols and copy to clipboard
gpgen() {
    gopass generate -s -c $1
}

