# compatible with gopass 1.9.0

# get path to secret via grep
gpget() {

        if [ -z $1 ]; then
                echo "Must pass one or two grep arguments"
                return 1
        fi

        # grep for path to secret
        local secret_path=$(gpfind $1)
        if [ ! -z $2 ]; then
                local secret_path=$(echo "$secret_path" | grep -i $2)
        fi

        # check that exactly one result was returned
        if [ -z "$secret_path" ]; then
                echo "No secrets matched"
                return 1
        fi
        if [ $(echo "$secret_path" | wc -l) -gt 1 ]; then
                echo "More than one secret matched:"
                echo "$secret_path"
                return 1
        fi
	
	echo "$secret_path"
}


# list the top level gopass directories
gptoplevel() {
	 gopass list -f | sed 's/\/.*//' | sort | uniq
}


# find path to entry
gpfind() {
	gopass ls -f | grep -i $1
}


# show all but the password of a secret
gpshow() {

	# do not use local here
        secret_path=$(gpget $1 $2) || { echo "$secret_path"; unset secret_path; return 1; }

        echo ""
        gopass show -C "$secret_path" | tail -n +3
        echo ""
        echo ""

	unset secret_path
}


# grep for secret, open in Chrome, copy password to clipboard
gpopen() {

	# do not use local here
	secret_path=$(gpget $1 $2) || { echo "$secret_path"; unset secret_path; return 1; }

	echo "Opening $secret_path"

	# copy to clipboard and open url - relies on convention that url is on the second line and has the prefix "url: "
	local url=$(gopass show -C $secret_path | tail -n +3 | head -n 1 | sed "s/url: //")
	open -na "Google Chrome" --args --new-window $url

	unset secret_path
}

# grep for secret and copy password to clipboard
gpcp() {

	# do not use local here        
        secret_path=$(gpget $1 $2) || { echo "$secret_path"; unset secret_path; return 1; }
        gopass -c $secret_path
	unset secret_path
}
